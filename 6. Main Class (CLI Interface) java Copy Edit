import java.util.*;

public class Main {
    private static Scanner scanner = new Scanner(System.in);
    private static Cart cart = new Cart();
    private static List<Product> products = Database.loadProducts();
    private static String loggedInUser = null;

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n1. Register\n2. Login\n3. Browse Products\n4. View Cart\n5. Checkout\n6. Exit");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1 -> registerUser();
                case 2 -> loginUser();
                case 3 -> browseProducts();
                case 4 -> cart.displayCart();
                case 5 -> checkout();
                case 6 -> System.exit(0);
                default -> System.out.println("Invalid choice. Try again.");
            }
        }
    }

    private static void registerUser() {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        if (AuthService.register(username, password)) {
            System.out.println("Registration successful!");
        }
    }

    private static void loginUser() {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        if (AuthService.login(username, password)) {
            loggedInUser = username;
            System.out.println("Login successful! Welcome, " + username);
        } else {
            System.out.println("Invalid credentials.");
        }
    }

    private static void browseProducts() {
        System.out.println("\nAvailable Products:");
        products.forEach(System.out::println);
        System.out.print("Enter product ID to add to cart (or 0 to go back): ");
        int id = scanner.nextInt();
        if (id == 0) return;

        products.stream()
                .filter(p -> p.getId() == id)
                .findFirst()
                .ifPresent(cart::addProduct);
    }

    private static void checkout() {
        if (loggedInUser == null) {
            System.out.println("Please log in first.");
            return;
        }

        cart.displayCart();
        System.out.print("Confirm checkout? (yes/no): ");
        String confirm = scanner.next();
        if (confirm.equalsIgnoreCase("yes")) {
            Order order = new Order(cart, loggedInUser);
            order.saveOrder();
            cart = new Cart(); // Clear cart
        }
    }
}
